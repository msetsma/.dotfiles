# ==============================================================================
# How to Use
# ==============================================================================
# To initialize the environment:
#     $ cargo make init
#
# To update tools and dependencies:
#     $ cargo make update
#
# You can also run individual tasks as needed. Examples:
#     $ cargo make install-rust       # Install Rust and components
#     $ cargo make install-tools      # Install platform-specific tools
# ==============================================================================

# ==============================================================================
# Main Setup Task
# ==============================================================================
[tasks.init]
description = "Set up the development environment"
dependencies = [
    "install-rust",            # Install Rust and its components
    "install-coreutils",       # Install platform-specific coreutils
    "install-tools",           # Install platform-specific tools
    "install-rust-tools",      # Install additional Rust tools
    "run-mise",                # Run mise to apply configuration
    "dotfiles"                 # Symlink dotfiles
]

# Rust Configuration (rust is dependency for this entire make file)
[tasks.install-rust]
description = "Install Rust toolchain components."
script = [
    "rustup component add clippy rustfmt"
]

[tasks.install-rust-tools]
script = [
    "cargo install mise dotter cargo-update"
]

# Platform-Specific Coreutils Installation
[tasks.install-coreutils]
linux_alias = "linux-core-utils"
windows_alias = "windows-core-utils"
mac_alias = "mac-core-utils"

[tasks.linux-core-utils]
condition = { platforms = ["linux"] }
script = [
  "echo 'Installing coreutils for Linux...'",
  "cargo install coreutils --features unix"
]

[tasks.windows-core-utils]
condition = { platforms = ["windows"] }
script = [
  "echo 'Installing coreutils for Windows...'",
  "cargo install coreutils --features windows"
]

[tasks.mac-core-utils]
condition = { platforms = ["mac"] }
script = [
  "echo 'Installing coreutils for macOS...'",
  "cargo install coreutils --features macos"
]

# Platform-Specific Tool Installation
[tasks.install-tools]
linux_alias = "linux-tools"
windows_alias = "windows-tools"
mac_alias = "mac-tools"

[tasks.linux-tools]
script = [
  "echo '--- Installing Linux tools ---'",
  "sudo apt-get update" 
]

[tasks.windows-tools]
script = [
  "echo '--- Installing Scoop ---'",
  "irm get.scoop.sh | iex",
  "scoop bucket add extras", 
  "scoop install ripgrep",
  "scoop install ripgrep",
  "scoop install ripgrep",
  "scoop install ripgrep",
  "scoop install ripgrep",
  "scoop install ripgrep",
  "scoop install ripgrep",
  "scoop install ripgrep",
]

[tasks.mac-tools]
script = [
  "echo '--- Installing Homebrew ---'",
  '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"',
  "brew install xcode-select --install"
]

# Mise Configuration
[tasks.run-mise]
description = "Run mise to apply configuration files"
script = [
  "echo 'Running mise to configure your system...'",
  "mise install"
]

# Dotfiles Management
[tasks.dotfiles]
description = "Symlink all the .dotfiles depending on dotter/system.toml files"
script = [
    "dotter" # Apply dotfiles using dotter
]

# ==============================================================================
# Main Update Task
# ==============================================================================
[tasks.update]
description = "Manually update all tools, dependencies, and configurations"
dependencies = [
    "update-rust",           # Update Rust toolchain and components
    "update-platform-tools", # Update platform-specific tools
    "update-mise"            # Update mise configurations
]

# Rust Toolchain Update
[tasks.update-rust]
description = "Update Rust and toolchain components"
script = [
    "rustup update",     
    "cargo install-update -a"
]

# Platform-Specific Tools Update
[tasks.update-platform-tools]
linux_alias = "update-linux-tools"
windows_alias = "update-windows-tools"
mac_alias = "update-mac-tools"

[tasks.update-linux-tools]
script = [
    "sudo apt-get update -y",
    "sudo apt-get upgrade -y",
]

[tasks.update-windows-tools]
script = [
    "echo --- Updating Scoop Packages ---",
    "scoop update",
    "scoop update *",
]

[tasks.update-mac-tools]
script = [
    "brew update",
    "brew upgrade",
]

[tasks.update-mise]
description = "Update Mise Managed Packages"
script = [
    "echo --- Updating Mise Packages ---",
    "mise install",
]